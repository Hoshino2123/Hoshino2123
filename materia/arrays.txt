Arrays:
Conjunto de items todos do mesmo tipo.
São estáticos (o nº de elementos é fixo).
usa-se um íncide para referenciar(indexar) um elemento
o nº do índice começa sempre em zero.

int idade[4]; //criar o array
//Escreve 18 na 3ª pessoa.
int dade[2]=18;

// Quando o array é criado, pode ser logo preenchido.
int idade[]= {15,16,17}; - //possso nao definir a dimensão
int IDADE[3]= {8}; 
int IDADE[3] = {0}; - //excepção - só funciona com zero

//Percorrer um array (por exemplo para listar todos os items)
//assumindo que a sua dimensão é dim	

for (size-t i =0; i<dim; i++) //size_t é usado para representar tamanhos de objetos, índices e 
cout <<arr[i] <<endl; - forma mais dificil

for(int el:arr) //int= tipo do array, arr=nome do array, el=nome dado a um elemento do array.
cout <<el<<endl;

//Quando não se sabe o tipo.
for(AUTO el : arr) //AUTO =o AUTO é para ser o compilador a procurar o tipo do array automáticamente. //Importante pro teste
cout << el << endl; //AUTO =o AUTO é para ser o compilador a procurar o tipo do array automáticamente. //Importante pro teste - forma mais fácil

Criar um array de 10 booleanos usando uma constante para a sua dimensão.
const int max=10;
//criar o array.
bool minas[max];
//colocar todos os elementos a falso.
for(Auto mina : minas; //mina=elemento do array que é falso.
mina=false;

//fazer a função LimpaMinas() para limpar todas as minas do array, void não devolve nada
void LimpaMinas(){
for(auto MINA : Minas); //mina=elemento do array que é falso.
mina=false;
}
//fazer a função MostraMinas() que mostra as minas no ecrã

void MostraMinas() {
    for (auto mina: Minas){
      if(MINA) cout << ' * ' // if=se
      else cout << ' 0 ', else=senão
      //operador trenário
       cout <<((mina))?'*' : '0');
    }
}
